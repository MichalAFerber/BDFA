// <auto-generated />
using System;
using BDFA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BDFA.Migrations
{
    [DbContext(typeof(DirectoryContext))]
    [Migration("20240710083552_AddFeaturedAuthorColumn")]
    partial class AddFeaturedAuthorColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("BDFA.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Expires")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("BDFA.Models.Profile", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("TEXT");

                    b.Property<bool>("FeaturedAuthor")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FeaturedDeal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<int>("RowId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tagline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlFBGroup")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlFBPage")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlIG")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlNewsletter")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlOther")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlStore")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlThreads")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlTikTok")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlX")
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("Profiles", (string)null);
                });

            modelBuilder.Entity("BDFA.Models.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Settings", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
